<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="Installation" basedir=".">
    <description>Configures and installs the ICAT API project onto Glassfish.</description>
    <import file="nbproject/ant-deploy.xml"/>
    <property file="${basedir}/nbproject/glassfish.properties"/>
    <property file="${basedir}/nbproject/databases.properties"/>
    <property name="dist.dir" value="dist"/>
    <property name="application.jar" value="icat3-api-ws.jar"/>
  
    <!--                                                      -->
    <!--  Redeploys ICAT API file ${dist.dir}/icat3-exposed.jar -->   
    <!--                                                      -->
    <target name="redeploy" depends="-copy-application-jar" description="Redeploys ICAT API">
        <antcall target="-undeploy-application" />
        <antcall target="-deploy-application" />
    </target>
    <!--                                                      -->
    <!--  Deploys ICAT API file ${dist.dir}/icat3-exposed.jar -->   
    <!--                                                      -->
    <target name="deploy" depends="-copy-application-jar" description="Deploys ICAT API">
        <antcall target="-deploy-application" />
    </target>
    <!--                                                      -->
    <!--  Undeploys ICAT API file ${dist.dir}/icat3-exposed.jar -->   
    <!--                                                      -->
    <target name="undeploy" depends="-copy-application-jar" description="Undeploys ICAT API">
        <antcall target="-undeploy-application" />
    </target>    
    <!--                                                      -->
    <!--  Adds all ICAT APIs server resources to glassfish    -->   
    <!--  from the database.properties file                   -->
    <!--                                                      -->
    <target name="add-server-resources" depends="-replaceURLs" description="Adds all of ICAT API's server resources">
        <antcall target="-add-connection-pool">
            <param name="connection.pool.name" value="icat3" />
            <param name="user" value="${icat.user}" />
            <param name="url" value='"${icat.url.replaced}"' />
            <param name="password" value="${icat.password}" />
            <param name="table" value="INVESTIGATION" />
            <param name="data.source" value="${icat.data.source.classname}" />
            <param name="description" value='"This is the main ICAT schema"' />
        </antcall>
        <antcall target="-add-connection-pool" >
            <param name="connection.pool.name" value="icat3-user" />
            <param name="user" value="${icatuser.user}" />
            <param name="url" value='"${icatuser.url.replaced}"' />
            <param name="password" value="${icatuser.password}" />
            <param name="table" value="USER_SESSION" />
            <param name="data.source" value="${icatuser.data.source.classname}" />
            <param name="description" value='"This is the ICAT user schema for the ICAT API session"' />
        </antcall>
    </target>
    <!--                                                     -->
    <!--  Removes all ICAT APIs server resources from         -->   
    <!--  glassfish                                           -->
    <!--                                                      -->
    <target name="remove-server-resources" description="Removes all of ICAT API's server resources" >
        <antcall target="-remove-connection-pool" >
            <param name="connection.pool.name" value="icat3" />
        </antcall>
        <antcall target="-remove-connection-pool" >
            <param name="connection.pool.name" value="icat3-user" />
        </antcall>
    </target>
    <!--                                                            -->
    <!--  Copies the icat3-api-ws-facility_name to icat3-api-ws.jar --> 
    <!--  depending on what facility needs deploying                -->
    <!--                                                            -->
    <target name="-copy-application-jar">      
        <antcall target="-copy-application" >
            <param name="application.facility.jar" value="icat3-api-ws-${facility.name}.jar" />
        </antcall>
    </target>    
    <!--                                                      -->
    <!--  Total clean of all things added to glassfish        -->   
    <!--  for ICAT API: Config file, resources and app        -->
    <!--                                                      -->
    <target name="clean" description="Removes all of ICAT API" >
        <antcall target="remove-config" />
        <antcall target="remove-server-resources" />        
        <antcall target="-remove-file-realm-user">
            <param name="admin.auth.user" value="${facility.name}-admin" />
        </antcall>
        <antcall target="undeploy" />
    </target>
    <!--                                                      -->
    <!--  Installs all to glassfish for ICAT API              -->   
    <!--  Config files and jars, server resources and the app -->
    <!--                                                      -->
    <target name="install" description="Installs all of ICAT API" >
        <antcall target="init-config" />
        <antcall target="add-server-resources" />
        <antcall target="-add-file-realm-user">
            <param name="admin.auth.user" value="${facility.name}-admin" />
            <param name="admin.auth.group" value="admin" />
        </antcall>
        <antcall target="deploy" />
    </target>    
    <!--                                                        -->
    <!--  Configures the MyProxy Server in the ICAT user schema -->
    <!--                                                        -->
    <target name="configure-icat-db" description="Configures myproxy and admin accounts in icat user schema" >
        <sql driver="${icatuser.driver}"
            url="${icatuser.url}"
            userid="${icatuser.user}"
            password="${icatuser.password}"
            classpath="${basedir}/lib/ojdbc14.jar"            
            onerror="abort">
            DELETE MYPROXY_SERVERS;
            -- Normal myproxy
            --INSERT INTO MYPROXY_SERVERS values (1, '/C=UK/O=eScience/OU=CLRC/L=RAL/CN=host/myproxy.grid-support.ac.uk/E=support@grid-support.ac.uk', 7512, 'myproxy.grid-support.ac.uk', 1, systimestamp);
            -- SSO MyProxy
            INSERT INTO MYPROXY_SERVERS values (1, '/C=UK/O=eScience/OU=CLRC/L=RAL/CN=myproxy-sso.grid-support.ac.uk/E=support@grid-support.ac.uk', 7512, 'myproxy-sso.grid-support.ac.uk', 1, systimestamp);
           
            -- Now configure Admin / Super user service for ICAT ADMIN web services
            -- If ADMIN_USER and/or SUPER_USER is in the USER_ID column of the USER_TABLE in icat-user DB then
            -- these are enabled to login through the Admin web service
            -- ADMIN_USER allows users to log in as anther user and SUPER_USER allows you to log in as SUPER_USER
           INSERT INTO USER_TABLE values (0, 'ADMIN_USER', null, 'ADMIN_USER DN', systimestamp);
           INSERT INTO USER_TABLE values (1, 'SUPER_USER', null, 'SUPER_USER DN', systimestamp);
		INSERT INTO USER_TABLE values (2, 'overlord', 'password', 'overlord DN', systimestamp);
		INSERT INTO USER_TABLE values (3, 'damian', 'password', 'damian DN', systimestamp);
		INSERT INTO USER_TABLE values (4, 'doug', 'password', 'doug DN', systimestamp);
        </sql>
        <echo level="warn" message="The server now needs to be restarted or application redeployed for these changes to be recognised." />
    </target>
</project>
