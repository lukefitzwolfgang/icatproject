

DROP TABLE dataset_parameter;

CREATE TABLE DATASET_PARAMETER
(
DATASET_ID NUMBER NOT NULL,
NAME VARCHAR2(255) NOT NULL,
UNITS VARCHAR2(255) NOT NULL,
STRING_VALUE VARCHAR2(4000),
NUMERIC_VALUE DOUBLE PRECISION,
DATETIME_VALUE TIMESTAMP(3),
RANGE_TOP VARCHAR2(255),
RANGE_BOTTOM VARCHAR2(255),
ERROR VARCHAR2(255),
DESCRIPTION VARCHAR2(4000),
MOD_TIME TIMESTAMP(1) NOT NULL,
MOD_ID VARCHAR2(255) NOT NULL,
CREATE_TIME TIMESTAMP(1) NOT NULL,
CREATE_ID VARCHAR2(255) NOT NULL,
FACILITY_ACQUIRED VARCHAR2(1) NOT NULL,
DELETED VARCHAR2(1) DEFAULT 'N' NOT NULL
);

CREATE INDEX dp_idx2 ON dataset_parameter(name);


ALTER TABLE DATASET_PARAMETER
ADD CONSTRAINT PK_DSP PRIMARY KEY
(
DATASET_ID,
NAME,
UNITS
)
 ENABLE
;

ALTER TABLE DATASET_PARAMETER
ADD CONSTRAINT FK_DSP_DS FOREIGN KEY
(
DATASET_ID
)
REFERENCES DATASET
(
ID
)
ON DELETE CASCADE ENABLE
;





ALTER TABLE DATASET_PARAMETER
ADD CONSTRAINT DATASET_PARAMETER_PARAME_FK1 FOREIGN KEY
(
NAME,
UNITS
)
REFERENCES PARAMETER
(
NAME,
UNITS
) ENABLE
;



ALTER TABLE DATASET_PARAMETER
ADD CONSTRAINT DATASET_PARAMETER_CHK1 CHECK
(deleted in('Y','N'))
 ENABLE
;

ALTER TABLE DATASET_PARAMETER
ADD CONSTRAINT DATASET_PARAMETER_CHK2 CHECK
(Facility_Acquired in('Y','N'))
 ENABLE
;


COMMENT ON COLUMN DATASET_PARAMETER.DESCRIPTION IS 'from where and how the parameter was recorded or extracted as oppose to a definition of the parameter; the latter being defined in the parameter table'
;
