#summary Installation notes for Oracle XE, Glassfish and Icat 3.4

= ICAT installation =

<wiki:toc max_depth="1" />


= Planning the Icat installation  =

== Hardware requirements ==

For test and development purposes an Icat instance under Glassfish 3, plus a supporting Oracle XE database, can run
on a Linux system with 750Mbytes of memory, 1Gbyte of swap space and 12 GBytes of disk space on a standard dual core
pentium machine.
Performance will improve with higher specification machines with more memory.
For production services a separate database server would be recommended, possibly with a clustered version of Glassfish
as available in V3.1.

A similar minimum specification will apply for an installation on a Windows machine.

== System Ports to be used ==

A number of system ports will be used by the database and the Glassfish server.
The most important of these are the Glassfish HTTP and HTTPS listener ports with defaults of 8080 and 8181.
If a local instance of Oracle XE is using port 8080 it will be necessary to use a different port for Glassfish HTTP.
The Icat web services are normally accessed through the HTTPS port. 

== Installation User ID ==

It is best practice not to install Glassfish and Icat as user root on Linux systems.
Instead a new user ID, such as ''glassfish3'', is recommended for installation of both these packages.


== Required Software Components ==

The following software components are required:

 * Java (1.6 or later)
 * Ant (1.7 or later)
 * Glassfish (3.0.1 or 3.1 recommended)
 * Oracle XE Client tools (if database server not on same host)
 * Oracle XE Server (or access to an installed Oracle database)
 * ICAT (V3.4)
 * SVN client (if getting ICAT from SVN)

If installing a stand alone system for testing the free Oracle XE database is sufficient.
Production systems may need access to a larger Oracle system.

The software may be installed on Linux, Windows or Mac systems.
In this document we assume a Linux environment though the steps are the similar
in all environments.

= Pre-requisites = 

== Software to be installed ==

The above mentioned software packages should be installed on the system.
Most modern Linux systems provide interfaces to install Open Source packages directly.
For example Fedora users can run ''yum'' to install packages such as '''ant''' and '''svn'''.
Similarly ubuntu and debian systems provide the ''apt-get'' command line tool to install these packages or GUI based
alternatives.

A. Apache Ant v1.7+. Installed from package manager or:
 * [http://ant.apache.org http://ant.apache.org].

B. SVN client, if getting ICAT from SVN. Installed from package manager or:
 * [http://subversion.apache.org/packages.html http://subversion.apache.org/packages.html].

C. Java 6 with JDK. Either from package manager or from Sun/Oracle (SUN JDK):
 * [http://www.oracle.com/technetwork/java/javase/downloads/index.html http://www.oracle.com/technetwork/java/javase/downloads/index.html]

D. Glassfish V3, full product. In this document it is assumed Glassfish will run on port 8090, not the default 8080.
If Oracle if on a separate machine, or using a port other than 8080, Glassfish can use 8080.
Download from:
 * [http://glassfish.java.net/public/downloadsindex.html http://glassfish.java.net/public/downloadsindex.html].

E. Oracle Database 10g Express Edition, if no access to an existing Oracle database. Only the server is needed if running the database on the same host as Glassfish. Downloads from :
 * [http://www.oracle.com/technetwork/database/express-edition/downloads/index.html http://www.oracle.com/technetwork/database/express-edition/downloads/index.html]

F. ICAT distribution. This can be obtained from the googlecode repository:
 * [http://code.google.com/p/icatproject/ http://code.google.com/p/icatproject/].


 
== Additions to make to the standard environment ==

=== JAVA ===

Requirements:
   * Java 6 SE with the JDK; There is a choice of Sun JDK or OpenJDK. By default installation tools tend to fetch the OpenJDK version. Both should work but but if both are installed it is important to know which is in the PATH and set the JAVA_HOME correctly.
   * JCE - local_policy.jar and US_export_policy.jar in jre/lib/security; These files are already present in Sun JDK but may be absent in OpenJDK.
   * JRE endorsed directory containing wstx-asl-3.9.2.jar; This is done by the icat install script within ant-deploy-v3.xml, if the script is run as root, see details below.

=== GLASSFISH ===

Glassfish Server !OpenSource edition V3.0.1 (or later) is normally downloaded directly from the Oracle site.
It is important to use the full platform rather than the web profile version.
Glassfish can be installed under the same user account as the one to install ICAT, and this is simplest,
as the ICAT install requires write access to Glassfish directories.


=== ORACLE ===


Oracle XE requires that at least 1Gbyte of swap space is configured on the system.
Oracle XE server is normally downloaded from the Oracle site with .deb and .rpm packages available.
It is necessary to register to download this product.
After installation it is necessary to run the post install script to configure the SYS/SYSTEM password and ensure the service
runs on reboot.
The database will normally be installed under user oracle in group dba.
If you wish to run the database on a port other than 8080 then instructions are available at:
   * [http://daust.blogspot.com/2006/01/xe-changing-default-http-port.html xe-changing-default-http-port]


=== Linux environment ===

The following environmental variables are useful to set for the account used to install Glassfish and Icat.
It is important to have the Oracle server bin directory in the PATH when installing the icat schema.
These values can be set in the user's '''.bashrc''' file. Csh user's can set them in '''.cshrc'''.

|| *Environmental variable*         || *Typical value (linux)*                                || *Contains*                                                           ||
||INSTALLATION_HOME               || /home/glassfish3/googlecode/icat/installation        || location of the installation directory for icat                     ||
||GLASSFISH_HOME                  || /home/glassfish3/glassfish                           || home directory of the glassfish server                              ||
||JAVA_HOME                       || /usr/lib/jvm/java-6-sun                              || jre and jdk                                                         ||
||ORACLE_HOME                     || /usr/lib/oracle/xe/app/oracle/product/10.2.0/server  || home of the oracle server tools                                     ||
||ORACLE_SID                      || XE                                                   || the default SID to use with sqlplus                                 ||
||PATH                            || $JAVA_HOME/bin:$ORACLE_HOME/bin:$ANT_HOME/bin:$PATH  || add JAVA_HOME/bin ORACLE_HOME/bin                                   ||
||ANT_HOME                        || /home/glassfish3/apache-ant-1.8.1                    || location of ant version 1.7 or later, if needed                     ||

If a remote Oracle database is used ORACLE_HOME will refer to the Oracle client path.


== Ports in use ==

The following port numbers are assumed for a single system running Oracle XE and Glassfish plus ICAT.
Note the Glassfish HTTP port has been moved to 8090 instead of the default 8080.
The ICAT web service runs on the Glassfish HTTPS port.

|| *port* || *service*                 ||
|| 1521 || Oracle                  ||
|| 4848 || glassfish control panel ||
|| 8080 || Oracle control panel    ||
|| 8090 || glassfish HTTP port     ||
|| 8181 || glassfish HTTPS port    ||


== Obtaining an ICAT distribution ==

The ICAT software can be downloaded from the googlecode repository.
A zip file is available from the download area [http://code.google.com/p/icatproject/downloads/list downloads].
Alternatively the latest version may be checked out using SVN.
Non-project members may check out a read-only working copy anonymously over HTTPS using:

{{{
svn checkout https://icatproject.googlecode.com/svn/icat3_api/trunk/ icatproject-read-only
}}}


= Installing the ICAT Schemas for Oracle XE =

1. From the above ICAT installation directory ($INSTALLATION_HOME) go to the subdirectory ''database/icat'' containing the file '''install_icat.sql''';

2. Make sure your PATH includes the Oracle server bin directory with the command sqlplus;

3. Run sqlplus without connecting to the database (sqlplus /nolog);

4. Run the script install_icat.sql (@install_icat.sql).

Note that running sqlplus from a directory other than INSTALLATION_HOME/database/icat may cause the installation script to fail.

The installation script requests the Oracle sys password so that it can connect to the database and create the schemas (icat, icatuser) and the directory needed for the creation of the external tables.  The installation script will ask for a password for each of the newly created schema users (icat and icatuser).  Note that you have to have SYS access to the database.  If you are using a database other than XE, then you must have an entry in the tnsnames.ora file so that sqlplus can locate the database service. 

For example, the following command:
{{{
 sqlplus /nolog
}}}

provides the following dialogue:

{{{
SQL*Plus: Release 10.2.0.1.0 - Production on Fri Oct 10 12:10:51 2008
Copyright (c) 1982, 2005, Oracle. All rights reserved.

SQL> @install_icat.sql
I C A T I S I S    XE    I N S T A L L
This script will create ICAT schema objects in a named schema in a specified database.
Enter Database Name :  XE

Enter SYS password :  mysyspasswd - this is not echoed
Enter icat password :  myicatpasswd - this IS echoed
Enter icatuser password :  myicatuserpasswd - this IS echoed
Enter External tables location :  /tmp/extloc
creating user icat

... ... 
... ... 
... ... 


====================================================================
unit testing schema installation done.


====================================================================
Installation complete.  Please check the log files.

Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

}}}

== Database Verification ==

The contents of the database can be checked either using the Oracle web interface or via
commands issued to the sqlplus utility.
To use web interface requires opening a browser window and login in as e.g. icatuser.
Assuming that database is on the localhost, using port 8080, and the user is in group dba, then browsing to:

{{{
 localhost:8080/apex
}}}

will give the Oracle login screen. Enter e.g. icatuser and the associated password. Then browse to SQL->Query Builder->Create.
This should show a list of available tables. Selecting User_table should show fields such as Id, User_id, Dn and Password that
can be inspected by running a query.

Alternatively the following sqlplus command verifies that the icatuser schema has been installed:

{{{
  echo 'SELECT table_name FROM user_tables;' | sqlplus icatuser/myicatuserpasswd@XE
}}}

The following sqlplus command verifies that the icatuser table user_table has been populated:

{{{
  sqlplus icatuser/myicatuserpasswd@XE < eof

  COLUMN user_id      HEADING 'user_id' format a20
  COLUMN password     HEADING 'password' format A20

  SET    TRIMOUT      ON 
  SET    linesize     50
  set    pagesize     0

  select user_id, password from  user_table order by user_id;
  eof
}}}



= ICAT API Installation =

Author: Glen Drinkwater

Revised: Alistair Mills, Ron Fowler

== Prerequisites ==

The installation needs an Oracle database to be accessible with user names icat and icatuser:

   1. An installed ICAT 3.4 schema instance on an Oracle DB;
   2. An accessible empty schema for the ICAT API user session tables on an Oracle DB.

Environment variables JAVA_HOME and GLASSFISH_HOME represent the root directories for the installations of Java and Glassfish respectively. You should also use the same user for the installation as you are going to use for production.  This user should also be used also for Glassfish.  The reason for this, is that the user must configure passwords which are read by Glassfish.  The installation procedure removes temporary files used by Glassfish. 

== Installation of icat ==

It is not necessary to be root to install icat.  However one step in the installation attempts to update a system Java file.
In particular:

* The Java JDK is normally owned by root and only root can add files to the endorsed directory (wstx-asl-3.9.2.jar) and the security directory (local_policy.jar and US_export_policy.jar).
 

=== Step 01 - Ensure the ICAT installation directory is present ===

The previous section on installation of the database schemas required the download of the ICAT package:
 * This contains all the binary jars and ant scripts needed to install ICAT API;
 * This will be known as INSTALLATION_HOME.

=== Step 02 - Verify the version of ant ===

Check ant is installed with the correct version by executing this from the command prompt:

{{{
#!html
<pre class="wiki" style="color: red;">
ant -version 
</pre>
}}}

Expect a response such as:
{{{
#!html
<pre class="wiki" style="color: blue;">
Apache Ant version 1.7.0 compiled on December 13 2006.
</pre>
}}}

=== Step 03 - Configure databases.properties ===

Configure the file INSTALLATION_HOME/nbproject/databases.properties:
 * There is an example of the file below;
 * Change facility.name to ISIS or DLS.  This will install the version of ICAT API for ISIS or DLS;
 * Configure the ICAT schema:
   * Add the values to the properties for:
     * icat.user;
     * icat.url;
     * icat.password;
     * icat.data.source;
     * icat.driver.
   * This is for the main ICAT schema's username, password and url;
   * Note that icat.url must be in Oracle JBDC format.
 * The ICATUSER schema was installed in the database in the previous section and the password set there should be used above.


=== Step 04 - Configure glassfish.properties ===

Configure the file INSTALLATION_HOME/nbproject/glassfish.properties:
 * Configure the application server Glassfish:
   * If you are using the default Glassfish installation, most of these should be correct, though the http port may need to be set as 8090:
     * sjsas.admin.port;
     * sjsas.http.port;
     * sjsas.password;
     * sjsas.host;
     * sjsas.username;
     * sjsas.domain. 
   * Change sjsas.root to GLASSFISH_HOME remembering to add the escape character \ if you are on windows for : and and for \;
   * Change admin.auth.password to the password you wish to add for the admin ICAT API web services. The username will be facility.name-admin from above, for example ISIS-admin.
 * There is an example of this file at the end of this note.

=== Step 05 - Go to the INSTALLATION_HOME directory ===

Now that the configuration is finished, the installation can start with a series of ant commands executed in INSTALLATION_HOME.  These may have to execute as root.

=== Step 06 - ant -f icat.xml init-config ===
Use the following command:
{{{
#!html
<pre class="wiki" style="color: red;">
ant -f icat.xml init-config 
</pre>
}}}

Expect a response such as:

{{{
#!html
<pre class="wiki" style="color: blue;">

Buildfile: icat.xml

-init-facility-deployment-props:

-init-cl-deployment-props:

init-config:
     [copy] Copying 1 file to /home/glassfish3/glassfish/domains/domain1/config
     [copy] Copying 1 file to /home/glassfish3/glassfish/domains/domain1/config
     [copy] Copying 1 file to /home/glassfish3/glassfish/domains/domain1/lib/ext

-init-java-deployment-env:

-init-java-config:

BUILD SUCCESSFUL
Total time: 0 seconds
</pre>
}}}


 * Copies the required files onto the Glassfish server i.e. Oracle's JDBC driver;
 * Copies a jar file to fix a bug in the StAX Parser in Java 6;
 * If using Linux, manually copy:
{{{
#!html
<pre class="wiki" style="color: blue;">
INSTALLATION_HOME/lib/wstx-asl-3.9.2.jar 
</pre>
}}}
 * to: 
{{{
#!html
<pre class="wiki" style="color: red;">
JAVA_HOME/jre/lib/endorsed 
</pre>
}}}

Root access will normally be needed for this.

 * Create the directory JAVA_HOME/jre/lib/endorsed if it does not exist. 

=== Step 07  - ant -f icat.xml start-domain ===
Use the following command:
{{{
#!html
<pre class="wiki" style="color: red;">
ant -f icat.xml start-domain 
</pre>
}}}

Expect a response such as the following:

{{{
#!html
<pre class="wiki" style="color: blue;">
Buildfile: icat.xml

start-domain:
     [echo] Starting domain domain1
     [echo] Started server, waiting...
     [echo] Server started ok.

BUILD SUCCESSFUL
Total time: 13 seconds
</pre>
<p><a href="#note-07">If you get an error, see note 07.</a> </p>
}}}

 * Starts the Glassfish server, if it complains of not starting, check:
   * http://localhost:4848;
 * If it still has not started, use the following commands to start and stop and start the glassfish domain domain1:

{{{
#!html
<pre class="wiki" style="color: red;">
GLASSFISH_HOME/bin/asadmin start-domain domain1
GLASSFISH_HOME/bin/asadmin stop-domain domain1
GLASSFISH_HOME/bin/asadmin start-domain domain1
</pre>
}}}

=== Step 08 - ant -f icat.xml install  ===
If you are re-installing, then you can clean out the glassfish with the following command:  

{{{
#!html
<pre class="wiki" style="color: red;">
ant -f icat.xml clean 
</pre>
}}}

Use the following command to install the ICAT API:
{{{
#!html
<pre class="wiki" style="color: red;">
ant -f icat.xml install 
</pre>
}}}

Expect a response such as the following:
{{{
#!html
<pre class="wiki" style="
white-space: pre-wrap; /* css-3 */
white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
white-space: -pre-wrap; /* Opera 4-6 */
white-space: -o-pre-wrap; /* Opera 7 */
word-wrap: break-word; /* Internet Explorer 5.5+; */ color: blue;">
Buildfile: icat.xml

install:
-init-facility-deployment-props:
-init-cl-deployment-props:
init-config:
-init-java-deployment-env:
-init-java-config:
-replace-icatuser-url:
     [echo] jdbc:oracle:thin:@localhost:1521:XE
   [delete] Deleting: /tmp/urlreplace1770981207
     [echo] jdbc\:oracle\:thin\:@localhost\:1521\:XE
.
.
.
-deploy-application:
     [echo] Deploying icat3-api-ws.jar
[sun-appserv-deploy] Executing: deploy --user admin --passwordfile "/tmp/sjsas674386619"  --host localhost --port 4848 --force=true --enabled=true --name icat3-api-ws --verify=false --precompilejsp=true --upload=true "/home/alistair/local_alistair/scott/icat/installation/dist/icat3-api-ws.jar"
[sun-appserv-deploy] Command deploy executed successfully.
[sun-appserv-deploy] Command deploy executed successfully.
[sun-appserv-deploy] Command deploy executed successfully.
[sun-appserv-deploy] Command deploy executed successfully.
   [delete] Deleting: /tmp/sjsas674386619

BUILD SUCCESSFUL
Total time: 20 seconds
</pre>
<p><a href="#note-08">If you get an error, see note 08.</a> </p>
}}}


 * Creates all the glassfish data sources and connection pools and deploys the icat-api.ws.jar onto Glassfish;
 * If reinstalling, then some errors will occur saying it cannot create some tables; do not worry about this, it just means the tables have already been created;
 * If a failure or an error in the context of database connection that includes: 

{{{
#!html
<pre class="wiki" style="color: blue;">
Class not found
</pre>
<p><a href="#note-09">See note 09.</a> </p>
}}}

=== Step 09 - Optional: Add !MyProxy servers to the database ===

This step configures !MyProxy servers in the database and is not normally needed.

Use the following command to configure the !MyProxy Servers.
Note that the names of these servers are defined with the ant script icat.xml, and may need to be updated depending
on the local system.
This command also enables some additional accounts for for ICAT API admin logins:

{{{
#!html
<pre class="wiki" style="color: red;">
ant -f icat.xml configure-icat-db
</pre>
}}}
 
Expect a response such as:
{{{
#!html
<pre class="wiki" style="color: blue;">
Buildfile: icat.xml

configure-icat-db:
      [sql] Executing commands
      [sql] 7 of 7 SQL statements executed successfully
     [echo] The server now needs to be restarted or application redeployed for these changes to be recognised.

BUILD SUCCESSFUL
Total time: 0 seconds
</pre>
}}}

=== Step 10 - ant -f icat.xml restart-domain ===

Use the following command to allow the changes in step 09 to be picked up from the database:

{{{
#!html
<pre class="wiki" style="color: red;">
ant -f icat.xml restart-domain
</pre>
}}}
 
Expect a response such as:
{{{
#!html
<pre class="wiki" style="color: blue;">
restart-domain:

stop-domain:
     [echo] Stopping domain domain1
     [exec] Domain domain1 stopped.

start-domain:
     [echo] Starting domain domain1
     [echo] Started server, waiting...
     [echo] Server started ok.

BUILD SUCCESSFUL
Total time: 19 seconds
</pre>
}}}

=== Step 11 - Checking that the application is deployed via the Glassfish admin login ===

Login to the admin account via a web browser pointed at http://localhost:4848/common/index.jsf - use the password you selected for admin on installation of glassfish.

Then click on "List deployed Applications".

This should show just the icat application which should be marked as enabled.
Click on the icat name to see the details of the application.
Note that you should not use the browser "back" button while navigating the admin pages, as this returns
you to the login screen.


=== Step 12 - Checking the WSDL output ===

To check if the installation behaves as expected you can also view the WSDL directly.

Use the following URL in an Internet browser such as Firefox:

  * https://localhost:8181/ICATService/ICAT?wsdl to view the WSDL file. 

Note that the first time you access this address with a browser such as Firefox it may give a security
warning. You will need to accept the untrusted certificate permanently.

Expect a response such as the following:
{{{
#!html
<pre class="wiki" style="
white-space: pre-wrap; /* css-3 */
white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
white-space: -pre-wrap; /* Opera 4-6 */
white-space: -o-pre-wrap; /* Opera 7 */
word-wrap: break-word; /* Internet Explorer 5.5+; */ color: blue;">

&lt;!--
 Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3.1-hudson-417-SNAPSHOT. 
-->
−
&lt;!--
 Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3.1-hudson-417-SNAPSHOT. 
-->
−
&lt;definitions targetNamespace="client.icat3.uk" name="ICATService">
−
&lt;types>
−
&lt;xsd:schema>
&lt;xsd:import namespace="client.icat3.uk" schemaLocation="https://localhost:8181/ICATService/ICAT?xsd=1"/>
&lt;/xsd:schema>
&lt;/types>
−
&lt;message name="login">
&lt;part name="parameters" element="tns:login"/>
&lt;/message>
−
&lt;message name="loginResponse">
&lt;part name="parameters" element="tns:loginResponse"/>
&lt;/message>
.
.
.
&lt;service name="ICATService">
−
&lt;port name="ICATPort" binding="tns:ICATPortBinding">
&lt;soap:address location="https://localhost:8181/ICATService/ICAT"/>
&lt;/port>
&lt;/service>
&lt;/definitions>
</pre>
}}}

=== Step 13 - Checking the Glassfish log files ===

The log files for Glassfish are by default in GLASSFISH_HOME/domains/domain1/logs as server.log and jvm.log.
The server.log file records messages from each run of Glassfish, so look at the end of the file for any errors
from the latest run of Glassfish.

== Further information ==

=== Example of databases.properties ===

Here is an example of the file INSTALLATION_HOME/nbproject/databases.properties:
{{{
#!html
<pre class="wiki" style="color: blue;">
# Facility Name, either ISIS or DLS
facility.name=<span style="color: red;">ISIS</span>

# This is the properties for the main ICAT schema
icat.user=icat
icat.url=jdbc:oracle:thin:@localhost:1521:XE
icat.password=<span style="color: red;">myicatpasswd</span>
icat.data.source.classname=oracle.jdbc.pool.OracleDataSource
icat.driver=oracle.jdbc.driver.OracleDriver

# This is the properties for the ICAT user schema
icatuser.user=icatuser
icatuser.url=jdbc:oracle:thin:@localhost:1521:XE
icatuser.password=<span style="color: red;">myicatuserpasswd</span>
icatuser.data.source.classname=oracle.jdbc.pool.OracleDataSource
icatuser.driver=oracle.jdbc.driver.OracleDriver

</pre>
}}}

=== Useful commands for verifying the database ===
{{{
#!html
<pre class="wiki" style="color: red;">
echo 'SELECT table_name FROM user_tables;' | sqlplus        icat/myicatpasswd@XE
echo 'SELECT table_name FROM user_tables;' | sqlplus  dataportal/mydataportalpasswd@XE
echo 'SELECT table_name FROM user_tables;' | sqlplus    icatuser/myicatuserpasswd@XE
</pre>
}}}

Note that although there is a user called something like ISIS-admin with a password like icatadmin, this user is not a username for the database.  This username is contained within icat.

=== Example of glassfish.properties ===
{{{
#!html
<pre class="wiki" style="color: blue;">
# Glassfish Application server configuration
sjsas.admin.port=4848
sjsas.http.port=<span style="color: red;">8181</span>
sjsas.password=adminadmin
sjsas.host=localhost
sjsas.username=admin
sjsas.domain=domain1
# The next two are the only ones normally needed to be changed after
# a standard Glassfish configuration
# i.e. C\:\\Program Files\\glassfish-v2ur2 or /opt/glassfish-v2ur2 
sjsas.root=<span style="color: red;">/opt/glassfish
sjsas.version=3
</span>

# password for icat api admin
admin.auth.password=icatadmin
</pre>
}}}

Note that although there is a user called something like ISIS-admin with a password like icatadmin, this user is not a username for the database.  This username is contained within icat.

=== Footnotes ===

{{{
#!html

<p><a name="note-07"><u>Note 07</u></a> </p>
<p>On Linux, you may get a response such as the following:</p>

<pre class="wiki" style="
white-space: pre-wrap; /* css-3 */
white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
white-space: -pre-wrap; /* Opera 4-6 */
white-space: -o-pre-wrap; /* Opera 7 */
word-wrap: break-word; /* Internet Explorer 5.5+; */ color: blue;">
Buildfile: icat.xml

start-domain:
     [echo] Starting domain domain1

BUILD FAILED
/home/alistair/local_alistair/scott/icat/installation/nbproject/ant-deploy.xml:200: The &lt;exec> type doesn't support the "osfamily" attribute.

Total time: 0 seconds
</pre>

<p>This is because the ANT version is not 1.7 or later. Either change the version of ant in use, or edit the file INSTALLATION_HOME/nbproject/ant-deploy.xml and remove lines 200-203 amd remove the attribute osfamily="Unix" from line 204.  Here is a difference file to show the changes:<br>

<pre class="wiki" style="
white-space: pre-wrap; /* css-3 */
white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
white-space: -pre-wrap; /* Opera 4-6 */
white-space: -o-pre-wrap; /* Opera 7 */
word-wrap: break-word; /* Internet Explorer 5.5+; */ color: blue;">

200,203c200
&lt;         &lt;exec osfamily="Windows" spawn="true" dir="${sjsas.root}/bin" executable="${sjsas.root}/bin/asadmin.bat" >
&lt;             &lt;arg line=" start-domain ${sjsas.domain}" />
&lt;         &lt;/exec>
&lt;         &lt;exec osfamily="Unix" spawn="true" dir="${sjsas.root}/bin" executable="${sjsas.root}/bin/asadmin" >
---
&lt;         &lt;exec spawn="true" dir="${sjsas.root}/bin" executable="${sjsas.root}/bin/asadmin" >
</pre>
</p>
<p><a name="note-08"><u>Note 08</u></a> </p>
<p>On Linux, you may get a response such as the following:<br>

<pre class="wiki" style="
white-space: pre-wrap; /* css-3 */
white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
white-space: -pre-wrap; /* Opera 4-6 */
white-space: -o-pre-wrap; /* Opera 7 */
word-wrap: break-word; /* Internet Explorer 5.5+; */ color: blue;">
BUILD FAILED
/home/alistair/local_alistair/scott/icat/installation/icat.xml:95: The following error occurred while executing this line:
/home/alistair/local_alistair/scott/icat/installation/nbproject/ant-deploy.xml:150: The &lt;tempfile> type doesn't support the "deleteonexit" attribute.

Total time: 0 seconds
</pre>
</p>
<p>This is because the ANT version is not 1.7 or later. Either change the version of ant in use, or edit the file INSTALLATION_HOME/nbproject/ant-deploy.xml and remove the attribute deleteonexit="true" from line 67, 150, 163 and 176.  Here is a difference file to show the changes:</br>


<pre class="wiki" style="
white-space: pre-wrap; /* css-3 */
white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
white-space: -pre-wrap; /* Opera 4-6 */
white-space: -o-pre-wrap; /* Opera 7 */
word-wrap: break-word; /* Internet Explorer 5.5+; */ color: blue;">
67c67
&lt;         &lt;tempfile deleteonexit="true" prefix="sjsas" property="sjsas.password.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
---
>         &lt;tempfile prefix="sjsas" property="sjsas.password.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
150c150
&lt;        &lt;tempfile deleteonexit="true" prefix="urlreplace" property="url.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
---
>         &lt;tempfile prefix="urlreplace" property="url.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
163c163
&lt;        &lt;tempfile deleteonexit="true" prefix="urlreplace" property="url.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
---
>         &lt;tempfile prefix="urlreplace" property="url.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
176c176
&lt;         &lt;tempfile deleteonexit="true" prefix="urlreplace" property="url.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
---
>         &lt;tempfile prefix="urlreplace" property="url.file" destdir="${java.io.tmpdir}"/>  &lt;!-- do not forget to delete this! -->
</pre>

</p>

<p><a name="note-09"><u>Note 09</u></a> </p>

<p>Check to see if there is a file called ojdbc14.jar in: </p>

<pre class="wiki" style="color: red;">
GLASSFISH_HOME/domains/domain1/lib/ext 
</pre>

<p>If there is not one present, then copy it there from: </p>

<pre class="wiki" style="color: red;">
INSTALLATION_HOME/lib/ojdbc14.jar
</pre>

<p>The error message will be of the form:</p>

<pre class="wiki" style="
white-space: pre-wrap; /* css-3 */
white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
white-space: -pre-wrap; /* Opera 4-6 */
white-space: -o-pre-wrap; /* Opera 7 */
word-wrap: break-word; /* Internet Explorer 5.5+; */ color: blue;">
BUILD FAILED
/home/alistair/local_alistair/scott/icat/installation/icat.xml:95: The following error occurred while executing this line:
/home/alistair/local_alistair/scott/icat/installation/icat.xml:37: The following error occurred while executing this line:
/home/alistair/local_alistair/scott/icat/installation/nbproject/ant-deploy.xml:296: An exception occurred while running the command.  The exception message is: CLI137 Command create-jdbc-connection-pool failed..

Total time: 1 second
</pre>


}}}


