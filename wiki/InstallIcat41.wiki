#summary Installation instructions for ICAT 4.1

<wiki:toc max_depth="3" />

= Installation instructions for ICAT 4.1 =

== Source of pre-requisite materials ==

Java Enterprise Edition, Glassfish Server, Oracle Database Express, the Oracle client tools (sqlplus), Oracle Java connector (ojdbc14.jar), Mysql, mysql tools (mysql), Mysql Java connector (mysql-connector-java.jar) are all available for download from Oracle.   The versions required are the following:

 * Java Enterprise Edition - 6 or newer;
 * Glassfish Server - 3.1 or newer;
 * Database connection to either Oracle of Mysql;
 * Database connection jar such as ojdbc14.jar for Oracle or mysql-connector-java.jar for Mysql;
 * Python with the python-suds plugin;
 * tools such as sqlplus or mysql to access a database;
 
If a remote database is not available, a local one can be created using:
 
 * Oracle Express - 10 or newer;
 * Oracle Client tools - 10 or newer.
 
or:
 
 * Mysql - 5 or newer;
 * Mysql client tools - 5 or newer.


== Source of installation materials ==

ICAT 4.1 is available for download from the following URL:  
{{{
http://www.icatproject.org/mvn/repo/org/icatproject/icat.ear/4.1.0
}}}

For example, you can download with the wget commands as follows:
{{{
wget http://www.icatproject.org/mvn/repo/org/icatproject/icat.ear/4.1.0/icat.ear-4.1.0-config.zip 
wget http://www.icatproject.org/mvn/repo/org/icatproject/icat.ear/4.1.0/icat.ear-4.1.0.ear
}}}

Installation notes are available at the following URLs:
{{{
http://www.icatproject.org/mvn/site/icat/4.1.0/icat.ear/installation.html
http://code.google.com/p/icatproject/wiki/InstallIcat41
}}}

== Assumptions ==

In order to make it simple to install ICAT41, the following configuration is assumed:

Operating system: 
 * operation system: Linux
 * username: glassfish3
 * home directory: /home/glassfish3
 * shell: bash

Environmental variables:

It is conventional to set the following variables:
 * JAVA_HOME;
 * GLASSFISH_HOME;
 * PATH - add $JAVA_HOME/bin and $GLASSFISH_HOME/bin. 

Note that the operating system user glassfish3 is running the Glassfish Server and the applications.  There is no need to have enhanced privileges to install ICAT once the prerequisite software has been installed and the user account glassfish3 has been created. You do not require access as system administrator of the database once the user accounts icat and icatuser have been created.

Java run-time:
 * java: The operating system user glassfish3 has java on the PATH

Glassfish Server:
 * directory: /home/glassfish3/glassfish3/glassfish
 * asadmin command: The operating system user called glassfish3 has asadmin on the PATH 
 * ojdbc14.jar: The file ojdbc14.jar has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/lib
 * icat.properties: The file icat.properties has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/config
 * log4j.properties: The file log4j.properties has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/config

It is conventional to use the following usernames and passwords for Glassfish:
 
 * admin user: admin
 * admin user password: adminadmin
 * master password: changeit
 
Database:

If using Oracle Express on localhost, configure it to use port 8070 for the Administrator Portal.

 * Oracle database server: localhost
 * ICAT username/ password: icat/myicatpasswd
 * ICATUSER username/password: icatuser/myicatuserpasswd
 
If using Mysql on localhost, configure it to use port 3306 for jdbc access.

 * Mysql database server: localhost;
 * ICAT username/password: icat/myicatpasswd;
 * ICATUSER username/password: icatuser/myicatuserpasswd.

Directories:
 * icat41 - this contains scripts called create.sh and drop.sh and glassfish.props which tell the Glassfish Server what to do.

Server certificate:
 * Neither the server nor a client application require a certificate, although icat is deployed using https protocol.

Ports:
 * The port 1521 is available for Oracle;
 * The port 3306 is available for Mysql;
 * The port 8070 is available for Oracle Express;
 * The port 8181 is available for the Glassfish Server to deploy the icat api;
 * The port 4848 is available for the the admin console of the Glassfish Server.

Configuration is stored in the following files:
 * [http://code.google.com/p/icatproject/source/browse/ops/icat41/glassfish.props                  icat41/glassfish.props] - this contains the properties used by the glassfish.sh script;


== Instructions ==

Create a test environment similar to the one assumed.  If it is not possible to be identical, then the four files containing configuration may require changes.

Ensure the following conditions on the system: 

 * Database server running, and the username and passwords installed, but no content;
 * Glassfish Server installed, but not running;
 * Expand the distribution file into a directory; icat41 is used in the following instructions.

Two common errors are the following:
 * The icat properties file must be in the config directory of the glassfish server.  
 * The file java connector jar (ojdbc14.jar or the equivalent for mysql) must be in the file system before the Glassfish Server is started.  If is added later, it is necessary to restart the Glassfish Server.  

Do the following:

0. If starting the glassfish server for the first time, store the admin username and password.  Use the following command:

{{{
asadmin logon
}}}

It will then prompt for admin username (admin) and admin password.  It stores these in ~/.asadmin.  Once this has been done, it uses these values and does not prompt.

1. Start the Glassfish Server, create the database pools and deploy icat. Deploying icat also creates the schemas for icat and icatuser, but does not give them useful content.

To start the Glassfish Server, do the following:

{{{
cd icat41
asadmin start-domain domain1
}}}

Expect a response such as the following:

{{{
Waiting for domain1 to start .......................................................................................................
Successfully started the domain : domain1
domain  Location: /home/glassfish3/glassfish3/glassfish/domains/domain1
Log File: /home/glassfish3/glassfish3/glassfish/domains/domain1/logs/server.log
Admin Port: 4848
Command start-domain executed successfully.
}}}

2. To create the jdbc and jms resources, do the following:

{{{
./create.sh
}}}

Expect a response such as the following:

{{{
.
.
server.http-service.access-log.format=common
Command set executed successfully.
server.http-service.access-logging-enabled=true
Command set executed successfully.
JDBC connection pool icat created successfully.
Attempting to ping during JDBC Connection Pool Creation : icat - Succeeded.
.
.
.
Command create-jms-resource executed successfully.
Administered object jms/ICATTopic created.
Command create-jms-resource executed successfully.
}}}

3. To deploy icat , do the following:

{{{
asadmin deploy icat.ear-4.1.0-rc-03.ear
}}}

Expect a response such as the following:

{{{
Application deployed with name icat.ear-4.1.0-rc-03.
Command deploy executed successfully.
}}}

You may also get warning messages at this point.  These can be ignored if you get "Command deploy executed successfullly".

If deploying on a system which has been previously used, expect the following response:

{{{
Cannot create tables for application icat.ear-4.1.0-rc-03. The expected DDL file icat.ear-4.1.0-rc-03_icat.exposed-4.1.0-rc-03_icatuser_createDDL.jdbc is not available.
PER01003: Deployment encountered SQL Exceptions:
	PER01000: Got SQLException executing statement "CREATE TABLE PUBLICATION (ID NUMBER(19) NOT NULL, CREATE_ID VARCHAR2(255) NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, FULLREFERENCE VARCHAR2(255) NOT NULL, MOD_ID VARCHAR2(255) NOT NULL, MOD_TIME TIMESTAMP NOT NULL, REPOSITORY VARCHAR2(255) NULL, REPOSITORYID VARCHAR2(255) NULL, URL VARCHAR2(255) NULL, INVESTIGATION_ID NUMBER(19) NOT NULL, PRIMARY KEY (ID))": java.sql.SQLException: ORA-00955: name is already used by an existing object
.
.
Command deploy executed successfully.
}}}

Pay attention to the last line of the message.  The bits before that are only warnings and can be ignored.

4. Run the test which does logon to the icat

{{{
cd icat41/test_icat
python test.py 8181 password
cd ..
}}}

Expect a response such as the following:

{{{
It seems to work...
}}}

If you get a response such as the following:

{{{
suds.WebFault: Server raised fault: 'Username and password do not match'
}}}

You have to insert the username/password values root/password into the user_table in the icatuser schema in the database in use.

5. If you get a response such as the above, then ICAT is working.

6. To stop icat and the Glassfish Server, do the following:

To undeploy icat, do the following:

{{{
cd icat41
asadmin undeploy icat.ear-4.1.0-rc-03
}}}
 
Expect the following outcome:

{{{
Command undeploy executed successfully.
}}}

To delete the jdbc and jms resources, do the following:

{{{
./drop.sh
}}}

Expect the following outcome:

{{{
.
.
JDBC Connection pool icat3-user deleted successfully
Command delete-jdbc-connection-pool executed successfully.
}}}

To stop the Glassfish Server, do the following:

{{{
asadmin stop-domain domain1
}}}

Expect the following outcome:

{{{
Command stop-domain executed successfully.
}}}


== - the end - ==