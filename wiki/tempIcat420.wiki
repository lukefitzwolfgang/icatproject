#summary This is a work in progress - do not believe it yet!

#summary Installation instructions for rapid deployment of ICAT 4.2

<wiki:toc max_depth="3" />

= Installation instructions for ICAT 4.2 =

Please note that these instructions should not be considered as definitive. The definitive documentation for ICAT may be found below:

http://www.icatproject.org/mvn/site/icat

The purpose of the instructions on this page is to provide a rapid way to get ICAT 4 running.  To install an ICAT for use, please read the full documnetation.

== Source of pre-requisite materials ==

Java Enterprise Edition including the Glassfish Server.   The recommended version is the following:

 * Java Enterprise Edition - 6 or newer with Glassfish server 3.1.2.
 
Note that additional materials such as an Oracle or Mysql database are not required.  The software used the Java DB which is part of the Glassfish server.

There is a download available from Oracle at the following url.  It is necessary to go to the Oracle web site and accept the licence agreement.

http://download.oracle.com/otn-pub/java/java_ee_sdk/6u4/java_ee_sdk-6u4-unix.sh

In order to run the test program, the following is required:

 * Python with the python-suds plugin;

== Pay attention to the following items ==

If you have installed ICAT 4.0 or ICAT 4.1, there are a number of important differences:

 * Make sure you are using Glassfish 3.1.2;
 * The database schema called icatuser now has a table called passwd.  The installation script creates the table, but you have to populate it with a username and password.
 * The authentication mechanism is deployed as a separate component.  Icatproject.org provides working instances using a local database (db) and a Ldap (ldap). 

== Source of installation materials ==

ICAT 4.2 is available for download from the following URL:  

== Installation ==

In order to make it simple to install ICAT42, these notes provide guidance for the following configuration:

Operating system: 
 * operation system: Linux
 * username: glassfish3
 * home directory: /home/glassfish3
 * shell: bash

Environmental variables:

It is conventional to set the following variables:
 * JAVA_HOME - may be /usr/lib/jvm/java-6-openjdk;
 * GLASSFISH_HOME;
 * JAVADB_HOME - $GLASSFISH_HOME/javadb
 * PATH - $JAVA_HOME/bin:$GLASSFISH_HOME/bin:$JAVADB_HOME/bin 

Note that the operating system user glassfish3 is running the Glassfish Server and the applications.  There is no need to have enhanced privileges to install ICAT once the prerequisite software has been installed and the user account glassfish3 has been created. You do not require access as system administrator of the database once the user accounts icat and icatuser have been created.

Java run-time:
 * java: The operating system user glassfish3 has java on the PATH.

Glassfish Server:
 * directory: /home/glassfish3/glassfish3/glassfish
 * asadmin command: The operating system user called glassfish3 has asadmin on the PATH 
 * ojdbc14.jar: The file ojdbc14.jar has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/lib
 * icat.properties: The file icat.properties has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/config
 * authn_db.properties: The file icat.properties has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/config
 * authn_ldap.properties: The file icat.properties has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/config
 * log4j.properties: The file log4j.properties has been added to /home/glassfish3/glassfish3/glassfish/domains/domain1/config

It is conventional to use the following usernames and passwords for Glassfish:
 
 * admin user: admin
 * admin user password: adminadmin
 * master password: changeit
 
Database:

If using Oracle Express on localhost, configure it to use port 8070 for the Administrator Portal.

 * Oracle database server: localhost;
 * ICAT username/password: icat/myicatpasswd;
 * ICATUSER username/password: icatuser/myicatuserpasswd.
 
If using Mysql on localhost, configure it to use port 3306 for jdbc access.

 * Mysql database server: localhost;
 * ICAT username/password: icat/myicatpasswd;
 * ICATUSER username/password: icatuser/myicatuserpasswd.

Directories:

Each of the following directories contains a prototype of the properties file for the corresponding component.  

 * icat42/icat.ear-4.2.0.ear/ - contains scripts called create.sh and drop.sh and glassfish.props which tell the Glassfish Server what to do for icat.
 * icat42/authn_db.ear-4.2.0.ear/ - contains scripts called create.sh and drop.sh and glassfish.props which tell the Glassfish Server what to do for authn db.
 * icat42/authn_ldap.ear-4.2.0.ear/ 
 
Server certificate:
 * Neither the server nor a client application require a certificate, although icat is deployed using https protocol.

Ports:
 * The port 1521 is available for Oracle;
 * The port 3306 is available for Mysql;
 * The port 8070 is available for Oracle Express;
 * The port 8181 is available for the Glassfish Server to deploy the icat api;
 * The port 4848 is available for the the admin console of the Glassfish Server.

== Instructions ==

Create a test environment similar to the one assumed.  


Ensure the following conditions on the system: 
 * Database server running, and the username and passwords installed, but no content;
 * Glassfish Server installed, but not running;
 * Expand the distribution files into a directory; icat42 is used in the following instructions.

The following files have to be changed for the local system:
 * icat42/icat.ear-4.2.0.ear/glassfish.props;
 * icat42/authn_db.ear-4.2.0.ear/glassfish.props.

The following files have to be changed for the local system and located in the correct place for Glassfish:
 * icat.properties;
 * authn_db.properties;
 * authn_ldap.properties.

Common errors are the following:
 * The properties files must be in the config directory of the glassfish server.  
 * The file java connector jar (ojdbc14.jar or the equivalent for mysql) must be in the file system BEFORE the Glassfish Server is started.  If is added later, it is necessary to restart the Glassfish Server.  

Do the following:

0. If starting the glassfish server for the first time, store the admin username and password.  Use the following command:
{{{
asadmin login
}}}

It will then prompt for admin username (admin) and admin password.  It stores these in ~/.asadmin.  Once this has been done, it uses these values and does not prompt.

1. Start the Glassfish Server, create the database pools and deploy icat. Deploying icat also creates the schemas for icat and icatuser, but does not give them useful content.

To start the Glassfish Server, do the following:
{{{
cd icat42
asadmin start-domain domain1
}}}

Expect a response such as the following:
{{{
Waiting for domain1 to start .......................................................................................................
Successfully started the domain : domain1
domain  Location: /home/glassfish3/glassfish3/glassfish/domains/domain1
Log File: /home/glassfish3/glassfish3/glassfish/domains/domain1/logs/server.log
Admin Port: 4848
Command start-domain executed successfully.
}}}

2. To create the jdbc and jms resources, do the following:
{{{
cd icat.ear.config
./create.sh
cd ../authn_db.ear.config
./create.sh
cd ..
}}}

Expect a response such as the following:
{{{
.
.
server.http-service.access-log.format=common
Command set executed successfully.
server.http-service.access-logging-enabled=true
Command set executed successfully.
JDBC connection pool icat created successfully.
Attempting to ping during JDBC Connection Pool Creation : icat - Succeeded.
.
.
.
Command create-jms-resource executed successfully.
Administered object jms/ICATTopic created.
Command create-jms-resource executed successfully.
}}}

3. To deploy icat, authn_ldap and authn_db , do the following:
{{{
asadmin deploy icat.ear-4.2.0.ear
asadmin deploy authn_db.ear-1.0.0.ear
asadmin deploy authn_ldap.ear-1.0.0.ear
}}}

Expect a response such as the following:
{{{
Application deployed with name icat.ear-4.2.0.
Command deploy executed successfully.

Application deployed with name authn_ldap.ear-1.0.0.
Command deploy executed successfully.

Application deployed with name authn_db.ear-1.0.0.
Command deploy executed successfully.
}}}

You may also get warning messages at this point.  These can be ignored if you get "Command deploy executed successfully".

If deploying on a system which has been previously used, expect the following response:
{{{
.
.
PER01003: Deployment encountered SQL Exceptions:
	PER01000: Got SQLException executing statement "CREATE TABLE PUBLICATION (ID NUMBER(19) NOT NULL, CREATE_ID VARCHAR2(255) NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, FULLREFERENCE VARCHAR2(255) NOT NULL, MOD_ID VARCHAR2(255) NOT NULL, MOD_TIME TIMESTAMP NOT NULL, REPOSITORY VARCHAR2(255) NULL, REPOSITORYID VARCHAR2(255) NULL, URL VARCHAR2(255) NULL, INVESTIGATION_ID NUMBER(19) NOT NULL, PRIMARY KEY (ID))": java.sql.SQLException: ORA-00955: name is already used by an existing object
.
.
Command deploy executed successfully.
}}}

Pay attention to the last line of the message.  The bits before the last line are only warnings and can be ignored.

4. Run the test which does logon to the icat
{{{
cd icat.ear.config 
python test.py localhost 8181 db username root password guess
cd ..
}}}

Expect a response such as the following:
{{{
Login, search, create, delete and logout operations were all successful.
}}}

If you get a response such as the following:
{{{
suds.WebFault: Server raised fault: 'Username and password do not match'
}}}

You have to insert the username/password values root/password into the passwd table in the icatuser schema in the database.

5. To stop icat and the Glassfish Server, do the following:

To undeploy icat, and the authenticators, do the following:
{{{
asadmin undeploy icat.ear-4.2.0
asadmin undeploy authn_db-1.0.0
asadmin undeploy authn_ldap-1.0.0
}}}
 
Expect the following outcome:
{{{
Command undeploy executed successfully.
}}}

To delete the jdbc and jms resources, do the following:
{{{
cd icat.ear-4.2.0.config/
./drop.sh
cd ../authn_db-4.2.0.config
./drop.sh
}}}

Expect the following outcome:
{{{
.
.
JDBC Connection pool icat3-user deleted successfully
Command delete-jdbc-connection-pool executed successfully.
}}}

To stop the Glassfish Server, do the following:
{{{
asadmin stop-domain domain1
}}}

Expect the following outcome:
{{{
Command stop-domain executed successfully.
}}}

== - the end - ==
