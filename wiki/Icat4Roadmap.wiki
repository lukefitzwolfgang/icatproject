#summary Road map for icat-4.
#labels icat4,roadmap

$Id$

= Road map for icat-4 =

== Introduction ==

At the ICAT collaboration meeting in Paris on 9 February 2011, it was agreed that there would be a roadmap prepared for ICAT4.  This document fulfils that agreement.  Comments are welcome. 

== ICAT-4 ==
Note that words like additional, and improved relate to icat-3.  Some of these features are already in icat3.3, and others will be available as a technology preview in icat4.0.

== Target date  ==
  * January 2012
    
== Release criteria ==

wiki:Icat4ReleaseCriteria
    
== Improved documentation ==
    * documentation of the API;
    * improvements to the installation documentation;
    * release notes;
    * deprecations documentation;
    * build documentation (not netbeans specific).

== Improved packaging ==
    * simpler build scripts (using Maven).
    
== Additional methods added to API ==
    * improved search methods such as parameter search and advancedSearch;
    * relatedDatafile exposed in the API;
    * new methods to create and update facility users.

== Support for TopCat ==
    * this is included with icat 3.3.
    
== Additions to the authorisation mechanism  ==
    * rule and group based authorisation.

== Existing operating environments ==
    * Oracle 10g;
    * Java Enterprise Edition 5;
    * Glassfish 3.

== Performance ==
    * Performance is similar to that of ICAT 3.

== Additional operating environments  ==
As part of the long term objective of making ICAT a portable system which is not dependent on specific products, ensure during testing that ICAT4 functions correctly with the following:
    * Java Enterprise Edition 6;
    * Java Enterprise Edition 7;
    * Mysql database, version 5;
    * Glassfish 3, 3.1 and 3.11;
    * TopCat 1;
    * Open-ejb.

== Additional facilities support  ==
The features of ICAT should be compatible with the following facilities which are in use by the community of ICAT users:
    * DOI (STFC/ISIS);
    * BIRT (ILL);
    * ECAT2 (STFC/CLF);
    * CIC (CLF ICAT Chain) (STFC/CLF);
    * IMP (CLF User office) (STFC/CLF-ISIS);
    * Penguin-2 (STFC/CLF);
    * SSO using MyProxy (STFC);
    * xmlingest (STFC);
    * icatuser schema (ANSTO);
    * usage/management reports compatible with reporting tools such as Jasper (STFC/ILL);
    * extended parameter types to match programming language/nexus types (ILL);
    * Mantid (STFC/ISIS, SNS);
    * DUO (STFC/DLS);
    * GDA (Generic Data Aquisition) (STFC/DLS);
    * Additional authorisation plugin for direct LDAP authorisation;
    * REST web service interface (STFC);
    * Sonatype Nexus Maven Repository;
    * Jenkins;
    * Sonar;
    * Techwriter Documentation System;
    * www.icatproject.org;
    * lightweight deployment configuration.

== Packaging changes  ==
    * xmlingest becomes an option (plugin).

== Database support  ==
    * Oracle 10g;
    * Oracle 11g;
    * MySQL 5.3.

== Deprecations  ==
    * Documentation on deprecations;

== Removals  ==
    * Use of Glassfish-2;
    * Dataportal;
    * ant install scripts, such as icat.xml.

== Related, but separate products  ==
    * TopCat 1.0;
    * Oracle Database 10g, 11g;
    * MySql 5.3;
    * Java Enterprise 5, 6, 7;
    * Ant 1.7, 1.8;
    * Java COG;
    * Glassfish: 3.0, 3.1, 3.11.
    
== Wish list  == 
These items will not be included in ICAT 4.0, but are candidates for the future.

    * improved error handling in XMLingest;
    * return of the study aggregation of investigations;
    * Software / application table links;
    * ability to do some cross ICAT relationships, for example at the level of a study, such so an ISIS investigation can be related to Diamond and ILL investigations which are part of the same research program.
    
== ORNL/SNS requirements ==

To provide better system performance and user experience, we wanted to offer live view and auto data reduction to SNS users in the future.  SNS has two major requirements:

1. Provide a new API method to allow a quick metadata search without a user login. The metadata request seems to vary from instrument to instrument. For example our eqsans instrument scientist asked for the following metadata: start time, run title, run notes, total run time, total accelerator current, sample to detector distance, wave length band used for a given run number or a range of run numbers. They wanted these metadata to be available in mantid via icat without having to login into mantid/icat. Today, these metadata are obtained by calling a script that harvests pieces from different metadata files on the instrument analysis machine. 

2. Another request is to enable cross references among the runs. How to best guess the background runs like empty run, transmission run, vanadium run etc that are needed for data reduction? Can this be done without a user login?


== - the end -  ==
