<project>
    <shortName>icat</shortName>
    <fullName>ICAT</fullName>
    <version>1.0</version>
    <readmeFile>README.txt</readmeFile>
    <licenseFile>LICENSE.txt</licenseFile>
    <leftImage>logo.gif</leftImage>
    <logoImage>small.gif</logoImage>
    <splashImage>logo.gif</splashImage>
    <componentList>
        <component>
            <name>default</name>
            <description>Default Component</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <shortcutList>
                        <shortcut>
                            <comment>Uninstall</comment>
                            <exec>${installdir}/${uninstallerName}</exec>
                            <icon></icon>
                            <name>Uninstall ${product_fullname}</name>
                            <path>${installdir}</path>
                            <platforms>all</platforms>
                            <runAsAdmin>0</runAsAdmin>
                            <runInTerminal>0</runInTerminal>
                            <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                            <windowsExecArgs></windowsExecArgs>
                            <windowsIcon></windowsIcon>
                            <windowsPath>${installdir}</windowsPath>
                        </shortcut>
                    </shortcutList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                </folder>
            </folderList>
            <startMenuShortcutList>
                <startMenuShortcut>
                    <comment>Uninstall ${product_fullname}</comment>
                    <name>Uninstall ${product_fullname}</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
            </startMenuShortcutList>
        </component>
        <component>
            <name>MySQL</name>
            <description>MySQL Server</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
        </component>
        <component>
            <name>Glassfish</name>
            <description>Glassfish Server</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Glassfish</description>
                    <destination>${installdir}/distro/glassfish</destination>
                    <name>glassfish</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile allowWildcards="1">
                            <origin>glassfish/*</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <postInstallationActionList>
                <if>
                    <actionList>
                        <unzip>
                            <destinationDirectory>${installdir}</destinationDirectory>
                            <zipFile>${installdir}/distro/glassfish/glassfish-4.0.zip</zipFile>
                        </unzip>
                        <runProgram>
                            <program>python</program>
                            <programArguments>${installdir}/distro/glassfish/setup-glassfish.py ${installdir}/glassfish4 fred</programArguments>
                            <progressText>Installing Glassfish</progressText>
                        </runProgram>
                        <copyFile>
                            <destination>${installdir}/glassfish4/glassfish/domains/domain1/lib/</destination>
                            <origin>${installdir}/distro/glassfish/mysql-connector-java-5.1.30-bin.jar</origin>
                        </copyFile>
                    </actionList>
                    <conditionRuleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${glassfish_installed}</value1>
                            <value2>0</value2>
                        </compareValues>
                    </conditionRuleList>
                </if>
                <runProgram>
                    <program>${installdir}/glassfish4/glassfish/bin/asadmin</program>
                    <programArguments>restart-domain</programArguments>
                    <progressText>Restarting glassfish</progressText>
                </runProgram>
            </postInstallationActionList>
            <preInstallationActionList>
                <if>
                    <actionList>
                        <setInstallerVariable>
                            <name>glassfish_installed</name>
                            <value>1</value>
                        </setInstallerVariable>
                    </actionList>
                    <conditionRuleList>
                        <fileExists>
                            <path>${installdir}/glassfish4/glassfish/domains/domain1/config/cert</path>
                        </fileExists>
                    </conditionRuleList>
                    <elseActionList>
                        <setInstallerVariable>
                            <name>glassfish_installed</name>
                            <value>0</value>
                        </setInstallerVariable>
                    </elseActionList>
                </if>
            </preInstallationActionList>
        </component>
        <componentGroup>
            <name>authn</name>
            <description>Authenticators</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>You must include at least one authenticator to allow login to ICAT.</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <componentList>
                <component>
                    <name>authn_anon</name>
                    <description>Anonymous Authenticator</description>
                    <canBeEdited>1</canBeEdited>
                    <detailedDescription>The anonymous authenticator accepts anyone.</detailedDescription>
                    <selected>0</selected>
                    <show>1</show>
                </component>
                <component>
                    <name>authn_simple</name>
                    <description>Simple Authenticator</description>
                    <canBeEdited>1</canBeEdited>
                    <detailedDescription>Users and passwords are listed in a file</detailedDescription>
                    <selected>0</selected>
                    <show>1</show>
                </component>
                <component>
                    <name>authn_ldap</name>
                    <description>LDAP Authenticator</description>
                    <canBeEdited>1</canBeEdited>
                    <detailedDescription>An authenticator that makes use of the contents of an LDAP database.</detailedDescription>
                    <selected>0</selected>
                    <show>1</show>
                </component>
                <component>
                    <name>authn_db</name>
                    <description>Database Authenticator</description>
                    <canBeEdited>1</canBeEdited>
                    <detailedDescription>An authenticator that makes use of the contents of a relational database.</detailedDescription>
                    <selected>0</selected>
                    <show>1</show>
                </component>
            </componentList>
        </componentGroup>
        <component>
            <name>icat_server</name>
            <description>The ICAT server</description>
            <canBeEdited>0</canBeEdited>
            <detailedDescription>This is the main ICAT server for the metadata.</detailedDescription>
            <selected>1</selected>
            <show>0</show>
            <componentSelectionValidationActionList>
                <throwError>
                    <text>You must install at least one authenticator.
                    </text>
                    <ruleList>
                        <isFalse value="${component(authn).component(authn_anon).selected}"/>
                        <isFalse value="${component(authn).component(authn_ldap).selected}"/>
                        <isFalse value="${component(authn).component(authn_db).selected}"/>
                        <isFalse value="${component(authn).component(authn_simple).selected}"/>
                    </ruleList>
                </throwError>
            </componentSelectionValidationActionList>
        </component>
        <component>
            <name>ids_server</name>
            <description>The IDS server</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>This is the server to upload and download data files.</detailedDescription>
            <selected>1</selected>
            <show>1</show>
        </component>
        <component>
            <name>topcat</name>
            <description>TopCAT</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>This is the server to upload and download data files.</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <componentSelectionValidationActionList>
                <throwError>
                    <text>topCAT cannot be installed without the IDS.
                    </text>
                    <ruleList>
                        <isFalse value="${component(ids_server).selected}"/>
                    </ruleList>
                </throwError>
            </componentSelectionValidationActionList>
        </component>
        <component>
            <name>ijp_server</name>
            <description>The IJP server</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>This is the server to permit submission of batch and interactive jobs.</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <componentSelectionValidationActionList>
                <throwError>
                    <text>IJP cannot be installed without the IDS.
                    </text>
                    <ruleList>
                        <isFalse value="${component(ids_server).selected}"/>
                    </ruleList>
                </throwError>
            </componentSelectionValidationActionList>
        </component>
    </componentList>
    <allowComponentSelection>1</allowComponentSelection>
    <enableRollback>1</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <saveRelativePaths>1</saveRelativePaths>
    <vendor>ICAT Collaboration</vendor>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_shortname}-${product_version}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
        </directoryParameter>
    </parameterList>
</project>

